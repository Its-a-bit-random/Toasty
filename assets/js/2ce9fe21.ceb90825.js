"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[6912],{19718:e=>{e.exports=JSON.parse('{"functions":[{"name":"Service","desc":"Creates a new singleton through the [SingletonManager]","params":[{"name":"options","desc":"","lua_type":"SingletonOptions"}],"returns":[{"desc":"","lua_type":"Singleton"}],"function_type":"static","source":{"line":17,"path":"Source/init.luau"}},{"name":"Controller","desc":"Creates a new singleton through the [SingletonManager]","params":[{"name":"options","desc":"","lua_type":"SingletonOptions"}],"returns":[{"desc":"","lua_type":"Singleton"}],"function_type":"static","source":{"line":26,"path":"Source/init.luau"}},{"name":"Lifecycle.Create","desc":"Create a new lifecycle event via the [LifecycleManager]\\n\\n\\nHere is am exmaple of a custom `OnHeartbeat` lifecycle\\n\\n```lua\\n-- Services/HeartbeatLifecycleService\\nlocal RunService = game:GetService(\\"RunService\\")\\nlocal Toasty = require(path.to.Toasty)\\n\\t\\nlocal HeartbeatLifecycleService = {\\n\\tImplements = { \\"OnStart\\" }\\n}\\n\\t\\nfunction HeartbeatLifecycleService:OnStart()\\n\\tlocal heartbeatLifecycle = Toasty.Lifecycle.Create(\\"OnHeartbeat\\")\\n\\n\\tRunService.Heartbeat:Connect(function(deltaTime)\\n\\t\\theartbeatLifecycle:Dispatch(deltaTime)\\n\\tend)\\nend\\n\\nreturn HeartbeatLifecycleService\\n\\n\\n-- Services/MyService.luau\\nlocal MyFirstService = {\\n\\tImplements = { \\"OnHeartbeat\\" };\\n}\\n\\n--[[\\n\\tAdd in the function wich gets called when the lifecycle\\n\\tis dispatched\\n]]\\nfunction MyFirstService:OnHeartbeat(deltaTime: number)\\n\\tprint(\\"Heartbeat, dt =\\", deltaTime)\\nend\\n\\nreturn MyFirstService\\n```","params":[{"name":"name","desc":"","lua_type":"string"},{"name":"handler","desc":"","lua_type":"LifecycleHandler?"}],"returns":[{"desc":"","lua_type":"Lifecycle"}],"function_type":"static","source":{"line":75,"path":"Source/init.luau"}}],"properties":[{"name":"Bootstrap","desc":"","lua_type":"Bootstrap","readonly":true,"source":{"line":81,"path":"Source/init.luau"}},{"name":"Networking","desc":"","lua_type":"Networking","readonly":true,"source":{"line":87,"path":"Source/init.luau"}},{"name":"Flags","desc":"","lua_type":"Flags","readonly":true,"source":{"line":93,"path":"Source/init.luau"}}],"types":[],"name":"Toasty","desc":"Entry point of Toasty framework","source":{"line":8,"path":"Source/init.luau"}}')}}]);